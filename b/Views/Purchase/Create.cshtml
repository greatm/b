@model Purchase

@{
    ViewBag.Title = "Purchase Create";
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    <style>
        a.test {
            font-weight: bold;
        }
    </style>
    
    <style type="text/css">
        .web_dialog_overlay {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            background: #000000;
            opacity: .15;
            filter: alpha(opacity=15);
            -moz-opacity: .15;
            z-index: 101;
            display: none;
        }

        .web_dialog {
            display: none;
            position: fixed;
            width: 380px;
            height: 200px;
            top: 50%;
            left: 50%;
            margin-left: -190px;
            margin-top: -100px;
            background-color: #ffffff;
            border: 2px solid #336699;
            padding: 0px;
            z-index: 102;
            font-family: Verdana;
            font-size: 10pt;
        }

        .web_dialog_title {
            border-bottom: solid 2px #336699;
            background-color: #336699;
            padding: 4px;
            color: White;
            font-weight: bold;
        }

            .web_dialog_title a {
                color: White;
                text-decoration: none;
            }

        .align_right {
            text-align: right;
        }
    </style>
    
}
<h2>Purchase Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Purchase</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("POID", String.Empty)
            @Html.ValidationMessageFor(model => model.POID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO.Vendor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PO.Vendor.Name)
            @*@Html.DropDownList("VendorID", String.Empty)*@
            @*@Html.ValidationMessageFor(model => model.VendorID)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorInvoice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorInvoice)
            @Html.ValidationMessageFor(model => model.VendorInvoice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

    </fieldset> 
    
    <script type="text/javascript">
        var mvcJqGrid = { demo: {} };

        mvcJqGrid.demo.buttonize = function (cellvalue, options, rowobject) {
            return '<a onclick="return mvcJqGrid.demo.edit(' + options.rowId + ')" href="#"><div class="ui-icon ui-icon-pencil" style="display:inline-block"></div></a>' +
                   '<a onclick="return mvcJqGrid.demo.delete(' + options.rowId + ')" href="#"><div class="ui-icon ui-icon-trash" style="display:inline-block"></div></a>';
        }

        mvcJqGrid.demo.edit = function (id) {
            alert("Edit for customerId " + id);
            return false;
        }

        mvcJqGrid.demo.delete = function (id) {
            alert("Delete for customerId " + id);
            return false;
        }

        var updateDialog = {
            url: '@Url.Action("Update", "Contact")'
        , closeAfterAdd: true
        , closeAfterEdit: true
            //, afterShowForm: function (formId) {
            //    $("#PhoneNumber").mask("(999) 999-9999");
            //    $("#DateOfBirth").datepicker();
            //}
            //, afterclickPgButtons: function (whichbutton, formid, rowid) {
            //    $("#PhoneNumber").mask("(999) 999-9999");
            //}
        , modal: true
        , width: "400"
        };

    </script>
    MvcJqGrid.DataReaders.JsonReader jsonReader = new MvcJqGrid.DataReaders.JsonReader();
    jsonReader.RepeatItems = false;
    jsonReader.Id = "dataJson";
            
    @(Html.Grid("piGrid")
            .SetCaption("purchase items")
            .AddColumn(new MvcJqGrid.Column("ProductID"))
            .AddColumn(new MvcJqGrid.Column("Quantity"))
            .AddColumn(new MvcJqGrid.Column("Rate"))
            .AddColumn(new MvcJqGrid.Column("Amount"))
            .AddColumn(new Column("&nbsp;").SetSearch(false).SetCustomFormatter("mvcJqGrid.demo.buttonize").SetWidth(50))
            .SetWidth(675)
            .SetRowNum(10)
            .SetUrl(Url.Action("piGrid", "Purchase"))
            .SetAutoEncode(true)
            .SetDataType(MvcJqGrid.Enums.DataType.Json)
            .SetJsonReader(jsonReader)
            .SetSearchToolbar(true).SetSearchOnEnter(false)
            .SetViewRecords(true)
            .SetPager("pager")
    .SetRowList(new[] { 10, 15, 20, 50 })
        //.SetRequestType(MvcJqGrid.Enums.RequestType.Post)
        .SetToolbarPosition(MvcJqGrid.Enums.ToolbarPosition.Top)
        .SetToolbar(true)

            )
    
    
    
    int pageSize = 20;
    if (Session["VisitorLogGridSettings"] != null)
    {
        // Get from cache the last page zise selected by the user. 
        GridSettings grid = new GridSettings();//(string)Session["VisitorLogGridSettings"]);
        pageSize = grid.PageSize;
    }
    // Restore the last search params from cache.
    string startDate = (Session["StartDate"] == null
        ? string.Empty
        : ((DateTime)Session["StartDate"]).ToShortDateString());
    string endDate = (Session["EndDate"] == null
        ? string.Empty
        : ((DateTime)Session["EndDate"]).ToShortDateString());

    <p>
        <input type="submit" value="Create" />
        <a href="/">Cancel</a>
        @Html.ActionLink("Back to List", "Index")
    </p>
}

@section Scripts {
    <script type="text/javascript">
        var gridDataUrl = '/Purchase/piGrid';
        var curPOid = '"@ViewData["curPOid"]"';

        function withoutParameter() {
            alert("it is without parameter");
        }

        function withParameter(str) {
            alert("it is with parameter: " + str);
        }

        var a = function (event) {
            alert("a");
        }
        function b(event) {
            alert("target " + event.target + ", " + event.pageY);
        }
        $(function () {

            $("#piGrid"). jqGrid('navButtonAdd', "pager", {
                caption: "Add Customer", title: "Add Customer", buttonicon: 'ui-icon-plus',
                onClickButton: function () {
                    alert("hi");
                }
            });


            $("#PO_Vendor_Name").is(":visible") && $("#PO_Vendor_Name").toggle(13000, function () {
                $(this).toggle(13000);
            });

            alert("welcome, please choose po");

            $("#PO_Vendor_Name").attr("disabled", "disabled");
            $("#POID").combobox({
                select: function (event, ui) {
                    var po_id = $(this).val();
                    //alert("event:" + event.Name);
                    //var po_text = $(this).find("option:selected").text();
                    //alert("po_text:" + po_text);
                    $.ajax({
                        url: "ChangePO/" + po_id,
                        success: function (curVendor) {
                            $("#PO_Vendor_Name").val(curVendor.Name);
                            setGridUrl(po_id);
                        }
                    });
                }
            });

            $("dialog").dialog("open");

            $("#btnShowSimple").click(function (e) {
                ShowDialog(false);
                e.preventDefault();
            });

            $("#btnShowModal").click(function (e) {
                ShowDialog(true);
                e.preventDefault();
            });

            $("#btnClose").click(function (e) {
                HideDialog();
                e.preventDefault();
            });

            $("#btnSubmit").click(function (e) {
                var brand = $("#brands input:radio:checked").val();
                $("#output").html("<b>Your favorite mobile brand: </b>" + brand);
                HideDialog();
                e.preventDefault();
            });

        });

        function ShowDialog(modal) {
            $("#overlay").show();
            $("#dialog").fadeIn(300);

            if (modal) {
                $("#overlay").unbind("click");
            }
            else {
                $("#overlay").click(function (e) {
                    HideDialog();
                });
            }
        }

        function HideDialog() {
            $("#overlay").hide();
            $("#dialog").fadeOut(300);
        }

        function setGridUrl(po_id) {
            var newGridDataUrl = gridDataUrl + '?curPOid=' + po_id;
            $('#piGrid').jqGrid('setGridParam', { url: newGridDataUrl }).trigger("reloadGrid");
        }

    </script>
}

<h3>JQuery Popup Dialogs</h3>

<input type="button" id="btnShowSimple" value="Simple Dialog" />
<input type="button" id="btnShowModal" value="Modal Dialog" />

<br />
<br />

<div id="output"></div>

<div id="overlay" class="web_dialog_overlay"></div>

<div id="dialog" class="web_dialog">
    <table style="width: 100%; border: 0px;" cellpadding="3" cellspacing="0">
        <tr>
            <td class="web_dialog_title">Online Survey</td>
            <td class="web_dialog_title align_right">
                <a href="#" id="btnClose">Close</a>
            </td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td colspan="2" style="padding-left: 15px;">
                <b>Choose your favorite mobile brand? </b>
            </td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td colspan="2" style="padding-left: 15px;">
                <div id="brands">
                    <input id="brand1" name="brand" type="radio" checked="checked" value="Nokia" />
                    Nokia
               <input id="brand2" name="brand" type="radio" value="Sony" />
                    Sony 
               <input id="brand3" name="brand" type="radio" value="Motorola" />
                    Motorola
                </div>
            </td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td colspan="2" style="text-align: center;">
                <input id="btnSubmit" type="button" value="Submit" />
            </td>
        </tr>
    </table>
</div>
