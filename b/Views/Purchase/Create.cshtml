@using b.Models;
@using MvcContrib;
@using MvcContrib.UI;
@using MvcContrib.UI.Grid;
@using MvcContrib.Sorting;
@using MvcJqGrid
@using Ext.Net

@model Purchase

@{
    ViewBag.Title = "Purchase Create";
}


@*@section example{
    <h1>form panel</h1>
    @(
 Html.X(this).FormPanelFor(m => m)
    .BodyPadding(5)
            .DefaultAnchor("100%")
            .Width(300)
            .Buttons(Html.X().Button()
                .Text("Submit")
                .DirectClickUrl(Url.Action("Submit"))
            )
    )

}*@

<h2>Purchase Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Purchase</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.PurchaseOrders)
        </div>
        <div class="editor-field">
            @Html.DropDownList("PurchaseOrders", String.Empty)
            @Html.ValidationMessageFor(model => model.VendorID)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.PO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("POID", String.Empty)
            @Html.ValidationMessageFor(model => model.POID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO.Vendor)
        </div>
        <div class="editor-field">
            @*@Html.LabelFor(model => model.PO.Vendor.Name)*@
            @Html.EditorFor(model => model.PO.Vendor.Name)
            @*@Html.DropDownList("VendorID", String.Empty)*@
            @*@Html.ValidationMessageFor(model => model.VendorID)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorInvoice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorInvoice)
            @Html.ValidationMessageFor(model => model.VendorInvoice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

    </fieldset> 
    
    <fieldset>
        <legend>Purchase Items</legend>






        @*  <style type="text/css">
            input {
                border: 1px solid #e2e2e2;
                background: #fff;
                color: #333;
                font-size: 1.2em;
                margin: 5px 0 6px 0;
                padding: 5px;
                width: 150px;
            }
        </style>

        <table id="tblPurchaseItems">
            <thead>
                <tr>
                    <th></th>
                    <th style="width: 100px">Product</th>
                    <th style="width: 100px">Rate</th>
                    <th style="width: 100px">Quantity</th>
                    <th style="width: 100px">Amount</th>
                    <th style="width: 100px"></th>
                </tr>
            </thead>

            <tbody id="itemEditor">
                @if (Model == null || Model.PurchaseItems == null || Model.PurchaseItems.Count() == 0)
                {
                    <tr>
                        <td>None.</td>
                    </tr>  
                }
                @if (Model != null && Model.PurchaseItems != null)
                {
                    foreach (PurchaseItem poitem in Model.PurchaseItems)
                    {
                        //Html.RenderPartial("PurchaseItemEntry",  new  PagedPurchaseModel { PageSize = 10, PurchaseItems = Model.PurchaseItems, TotalRows = 10 });
                        Html.RenderPartial("PurchaseItemEntry", poitem);
                    }
                }
            </tbody>
        </table>

        <a id="addAnother" href="#">Add another</a>*@

        @*  <script src="@Url.Content("~/Scripts/jQuery.tmpl.min.js")" type="text/javascript"></script>

        <script type="text/x-jquery-tmpl" id="movieTemplate">
            @Html.CollectionItemJQueryTemplate("PurchaseItemEntry", new PurchaseItem()) //agedPurchaseModel() { PageSize = 10, TotalRows = 10 })
        </script>*@

    </fieldset>
    
    <p>
        <input type="submit" value="Create" />
        <a href="/">Cancel</a>
    </p>
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $("#PO_Vendor_Name").attr("disabled", "disabled");
            $("#POID").combobox({
                select: function (event, ui) {
                    var po_id = $(this).val();
                    $.ajax({
                        url: "ChangePO/" + po_id,
                        success: function (curVendor) {
                            $("#PO_Vendor_Name").val(curVendor.Name);
                        }
                    });
                }
            });
            $("#VendorID").combobox();
            $("#itemEditor").sortable();
            $("#addAnother").click(function () {
                $.get('/Purchase/PurchaseItemEntry', function (template) {
                    $("#itemEditor").append(template);
                });
            });
        });
        var viewModel = {
            addNew: function () {
                $("#itemEditor").append($("#movieTemplate").tmpl({ index: viewModel._generateGuid() }));
            },

            _generateGuid: function () {
                // Source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/105074#105074
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        };
    </script>
}

<div style="width: 100%" class="sample-panel-margin">
    @(Html.Syncfusion().Grid<POItem>("Simple_Grid", "GridModel", column =>
        {
            column.Add(p => p.ProductID).HeaderText("Order ID").TextAlign(TextAlignment.Right).Width(100);
            column.Add(p => p.Qty).HeaderText("Employee ID").TextAlign(TextAlignment.Right).Width(100);
            column.Add(p => p.Rate).HeaderText("Customer ID").Width(170);
            column.Add(P => P.Amount).HeaderText("Ship Country");
        }))
</div>
