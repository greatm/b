@using b.Models;
@using MvcJqGrid

@model Purchase

@{
    ViewBag.Title = "Purchase Create";
}

<h2>Purchase Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Purchase</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.PurchaseOrders)
        </div>
        <div class="editor-field">
            @Html.DropDownList("PurchaseOrders", String.Empty)
            @Html.ValidationMessageFor(model => model.VendorID)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.PO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("POID", String.Empty)
            @Html.ValidationMessageFor(model => model.POID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO.Vendor)
        </div>
        <div class="editor-field">
            @*@Html.LabelFor(model => model.PO.Vendor.Name)*@
            @Html.EditorFor(model => model.PO.Vendor.Name)
            @*@Html.DropDownList("VendorID", String.Empty)*@
            @*@Html.ValidationMessageFor(model => model.VendorID)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorInvoice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorInvoice)
            @Html.ValidationMessageFor(model => model.VendorInvoice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

    </fieldset> 
    
    <fieldset>
        <legend>Purchase Items</legend>

        @{
    MvcJqGrid.DataReaders.JsonReader jsonReader = new MvcJqGrid.DataReaders.JsonReader();
    jsonReader.RepeatItems = false;
    jsonReader.Id = "dataJson";
    
            @(Html.Grid("piGrid")
    .SetCaption("purchase items")
.AddColumn(new MvcJqGrid.Column("ProductID"))
.AddColumn(new MvcJqGrid.Column("Qty"))
.AddColumn(new MvcJqGrid.Column("Rate"))
.AddColumn(new MvcJqGrid.Column("Amount"))
.SetWidth(650)
.SetRowNum(10)
.SetUrl("/Purchase/piGrid")
.SetAutoEncode(true)
.SetDataType(MvcJqGrid.Enums.DataType.Json)

.SetJsonReader(jsonReader)
.SetToolbar(true)
)
        }

    </fieldset>
    
    <p>
        <input type="submit" value="Create" />
        <a href="/">Cancel</a>
    </p>
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@{
    int pageSize = 20;
    if (Session["VisitorLogGridSettings"] != null)
    {
        // Get from cache the last page zise selected by the user. 
        GridSettings grid = new GridSettings();//(string)Session["VisitorLogGridSettings"]);
        pageSize = grid.PageSize;
    }
    // Restore the last search params from cache.
    string startDate = (Session["StartDate"] == null
        ? string.Empty
        : ((DateTime)Session["StartDate"]).ToShortDateString());
    string endDate = (Session["EndDate"] == null
        ? string.Empty
        : ((DateTime)Session["EndDate"]).ToShortDateString());
}

<div id="jqGrid">
    @Html.Partial("PurchaseItems")
</div>
<script type="text/javascript">
    var paramFromView = {
        @*DeleteAllCaption: '@Resources.Resource.VisitorLogDeleteAllCaption',
        ClearGridUrl: '@Url.Content("~/VisitorLog/ClearGridData")',
        DeleteAllConfirmationMessage: '@Resources.Resource.VisitorLogDeleteAllDataConfirmation',
        Url: '@Url.Content("~/VisitorLog/GetData")',*@
        Width: 790,
        Height: 464,
      @*  Caption: '@Resources.Resource.VisitorLogIndexTitle',
        VisitorName: '@Resources.Resource.VisitorLogIndexVisitorName',
        StartDate: '@Resources.Resource.VisitorLogIndexStartDate',
        EndDate: '@Resources.Resource.VisitorLogIndexEndDate',
        WasTimeOut: '@Resources.Resource.VisitorLogIndexWasTimeOut',
        Actions: '@Resources.Resource.VisitorLogIndexActions',*@
        PageSize: @pageSize
        }
</script>
@section Scripts {
    @Scripts.Render("~/Scripts/My_pigrid.js");
    <script type="text/javascript">
        $(function () {


            showGrid();
            $("#PO_Vendor_Name").attr("disabled", "disabled");
            $("#POID").combobox({
                select: function (event, ui) {
                    var po_id = $(this).val();
                    $.ajax({
                        url: "ChangePO/" + po_id,
                        success: function (curVendor) {
                            $("#PO_Vendor_Name").val(curVendor.Name);
                        }
                    });
                }
            });
            $("#VendorID").combobox();
            $("#itemEditor").sortable();
            $("#addAnother").click(function () {
                $.get('/Purchase/PurchaseItemEntry', function (template) {
                    $("#itemEditor").append(template);
                });
            });
        });
        var viewModel = {
            addNew: function () {
                $("#itemEditor").append($("#movieTemplate").tmpl({ index: viewModel._generateGuid() }));
            },

            _generateGuid: function () {
                // Source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/105074#105074
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        };
    </script>
}
