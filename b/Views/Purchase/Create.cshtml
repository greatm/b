@model Purchase

@{
    ViewBag.Title = "Purchase Create";
}
<h2>Purchase Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Purchase</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("POID", String.Empty)
            @Html.ValidationMessageFor(model => model.POID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PO.Vendor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PO.Vendor.Name)
            @*@Html.DropDownList("VendorID", String.Empty)*@
            @*@Html.ValidationMessageFor(model => model.VendorID)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VendorInvoice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VendorInvoice)
            @Html.ValidationMessageFor(model => model.VendorInvoice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

    </fieldset> 
    
    <fieldset>
        <legend>Purchase Items</legend>
        @{
    MvcJqGrid.DataReaders.JsonReader jsonReader = new MvcJqGrid.DataReaders.JsonReader();
    jsonReader.RepeatItems = false;
    jsonReader.Id = "dataJson";
            
            @(Html.Grid("piGrid")
            .SetCaption("purchase items")
            .AddColumn(new MvcJqGrid.Column("ProductID"))
            .AddColumn(new MvcJqGrid.Column("Qty"))
            .AddColumn(new MvcJqGrid.Column("Rate"))
            .AddColumn(new MvcJqGrid.Column("Amount"))
            .SetWidth(650)
            .SetRowNum(10)
            .SetUrl(Url.Action("piGrid", "Purchase", new { curPO = ViewData["curPO"] }))
            .SetAutoEncode(true)
            .SetDataType(MvcJqGrid.Enums.DataType.Json)
            .SetJsonReader(jsonReader)
            .SetSearchToolbar(true).SetSearchOnEnter(false)


            )
        }

        @{
    int pageSize = 20;
    if (Session["VisitorLogGridSettings"] != null)
    {
        // Get from cache the last page zise selected by the user. 
        GridSettings grid = new GridSettings();//(string)Session["VisitorLogGridSettings"]);
        pageSize = grid.PageSize;
    }
    // Restore the last search params from cache.
    string startDate = (Session["StartDate"] == null
        ? string.Empty
        : ((DateTime)Session["StartDate"]).ToShortDateString());
    string endDate = (Session["EndDate"] == null
        ? string.Empty
        : ((DateTime)Session["EndDate"]).ToShortDateString());
        }

    </fieldset>
    
    <p>
        <input type="submit" value="Create" />
        <a href="/">Cancel</a>
        @Html.ActionLink("Back to List", "Index")
    </p>
}

@section Scripts {
    @*@Scripts.Render("~/Scripts/My_pigrid.js")*@
    <script type="text/javascript">
        $(function () {
            $("#PO_Vendor_Name").attr("disabled", "disabled");
            $("#POID").combobox({
                select: function (event, ui) {
                    var po_id = $(this).val();
                    $.ajax({
                        url: "ChangePO/" + po_id,
                        success: function (curVendor) {
                            $("#PO_Vendor_Name").val(curVendor.Name);
                            $("#piGrid").trigger("reloadGrid");
                        }
                    });
                }
            });
        })
    </script>
}